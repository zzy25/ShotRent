<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">
	<!--注解类自动扫描-->
	<context:component-scan base-package="edu.xiyou.shotrent"/>

	<!--导入配置文件-->
	<bean id="propertyConfiger" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:applicationContext.properties</value>
			</list>
		</property>
	</bean>

	<!--dataSource 配置-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!--配置链接数据库属性-->
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<!--配置初始化大小，最小，最大-->
		<property name="initialSize" value="${dataSource.initialSize}"/>
		<property name="minIdle" value="${dataSource.minIdle}"/>
		<property name="maxActive" value="${dataSource.maxActive}"/>

		<!--配置获取链接等待的超时时间-->
		<property name="maxWait" value="${dataSource.maxWait}"/>

		<!--配置多久进行检测，检测需要关闭的空闲链接，单位是毫秒-->
		<property name="timeBetweenEvictionRunsMillis" value="${dataSource.timeBetweenEvictionRunsMillis}"/>

		<!--配置一个链接的最小生存时间-->
		<property name="minEvictableIdleTimeMillis" value="${dataSource.minEvictableIdleTimeMillis}"/>

		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>

		<!--打开PSCache,并且指定每个链接上的PSCache的大小-->
		<property name="poolPreparedStatements" value="false"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

		<!--配置监控统计拦截的filters-->
		<property name="filters" value="stat"/>
 	</bean>

	<!--mybatis配置，扫描所有mapper文件-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:edu/xiyou/shotrent/dao/xml/*.xml"/>
	</bean>

	<!--spring 和 mybatis 整合，扫描所有dao-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="edu.xiyou.shotrent.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<!--对dataSource进行事务管理-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--事务管理通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--对insert,update,delete进行事务管理，有异常则回滚-->
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
			<!--select, count开头的方法，开启只读，提高数据库访问性能-->
			<tx:method name="select*" read-only="true"/>
			<tx:method name="count*" read-only="true"/>
			<!--对其他的方法，进行默认的事务管理-->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>

	<!--事务aop配置-->
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* edu.xiyou.shotrent.service..*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
	</aop:config>

	<!--配置Spring 使用CGLIB代理-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!--启用的事务注解支持-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--cache 配置-->
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"/>
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManagerFactory"/>
	</bean>

</beans>